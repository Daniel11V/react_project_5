{"version":3,"sources":["App.js","store.js","index.js"],"names":["connect","state","session","breakLength","dispatch","changeBreak","isUp","type","up","changeSession","useState","actualTime","setActualTime","minutos","setMinutos","segundos","setSegundos","timerOn","setTimerOn","useEffect","interval","setInterval","prevTime","clearInterval","className","id","onClick","slice","initialState","createStore","action","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.104ffbaa.chunk.js","sourcesContent":["import './App.css';\nimport { connect } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nconst App = ({ breakLength, session, changeBreak, changeSession }) => {\n  const [actualTime, setActualTime] = useState('newSession');\n  const [minutos, setMinutos] = useState(session);\n  const [segundos, setSegundos] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n\n  useEffect(() => {\n    let interval = null;\n\n    switch (actualTime) {\n      case 'newSession':\n        setSegundos(0);\n        setMinutos(session);\n        if (timerOn) {\n          setActualTime('session');\n        }\n        break;\n      case 'newBreak':\n        setSegundos(0);\n        setMinutos(breakLength);\n        if (timerOn) {\n          setActualTime('break');\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (timerOn) {\n      interval = setInterval(() => {\n        if (segundos === 1 && minutos === 0) {\n          if (actualTime === 'session') {\n            setActualTime('newBreak');\n          } else {\n            setActualTime('newSession');\n          }\n        } else if (segundos === 0) {\n          setSegundos(prevTime => prevTime + 59);\n          setMinutos(prevTime => prevTime - 1);\n        } else {\n          setSegundos(prevTime => prevTime - 1);\n        }\n        // setSegundos(prevTime => prevTime - 1)\n        // setMinutos(prevTime => prevTime - 1)\n      }, 100)\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => {\n      clearInterval(interval);\n    }\n  }, [timerOn, actualTime, segundos, minutos, session, breakLength])\n\n  const refresh = () => {\n    setTimerOn(false);\n    setActualTime('newSession');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"tittle\">25 + 5 Clock</h1>\n      <div>\n        <div className=\"config inline\">\n          <div id=\"break-label\">Break Length</div>\n          <button id=\"break-decrement\" onClick={() => changeBreak(false)}>\n            <i className=\"fa fa-arrow-down fa-2x\"></i>\n          </button>\n          <div id=\"break-length\" className=\"inline\">{breakLength}</div>\n          <button id=\"break-increment\" onClick={() => changeBreak(true)}>\n            <i className=\"fa fa-arrow-up fa-2x\"></i>\n          </button>\n        </div>\n        <div className=\"config inline\">\n          <div id=\"session-label\">Session Length</div>\n          <button id=\"session-decrement\" onClick={() => changeSession(false)}>\n            <i className=\"fa fa-arrow-down fa-2x\"></i>\n          </button>\n          <div id=\"session-length\" className=\"inline\">{session}</div>\n          <button id=\"session-increment\" onClick={() => changeSession(true)}>\n            <i className=\"fa fa-arrow-up fa-2x\"></i>\n          </button>\n        </div>\n      </div>\n      <div className=\"timer\">\n        <div id=\"timer-label\">\n          {((actualTime === 'newSession') || (actualTime === 'session')) ?\n            \"Session\" : \"Break\"}\n        </div>\n        <div id=\"time-left\">\n          {('0' + minutos).slice(-2)}\n          {':'}\n          {('0' + segundos).slice(-2)}\n        </div>\n      </div>\n      <div className=\"controler\">\n        <button id=\"start_stop\" onClick={() => setTimerOn(!timerOn)}>\n          <i className={`fa ${timerOn ? 'fa-pause' : 'fa-play'} fa-2x`}></i>\n        </button>\n        <button id=\"reset\" onClick={refresh}>\n          <i className=\"fa fa-refresh fa-2x\"></i>\n        </button>\n      </div>\n    </div >\n  );\n}\n\nconst mapStateToProps = state => ({\n  session: state.session,\n  breakLength: state.breakLength\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeBreak(isUp) {\n    dispatch({\n      type: \"BREAK_CHANGE\",\n      up: isUp\n    })\n  },\n  changeSession(isUp) {\n    dispatch({\n      type: \"SESSION_CHANGE\",\n      up: isUp\n    })\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n    breakLength: 5,\r\n    session: 25\r\n}\r\n\r\nconst reducerCon = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'BREAK_CHANGE':\r\n            if (action.up) {\r\n                return { ...state, breakLength: state.breakLength + 1 }\r\n            } else {\r\n                return { ...state, breakLength: state.breakLength - 1 }\r\n            }\r\n        case 'SESSION_CHANGE':\r\n            if (action.up) {\r\n                return { ...state, session: state.session + 1 }\r\n            } else {\r\n                return { ...state, session: state.session - 1 }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default createStore(reducerCon);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}